# Generated by Django 5.1 on 2025-01-18 18:49

import ckeditor.fields
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aboutus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titell', models.CharField(max_length=50, verbose_name='تیتر اول')),
                ('textt', ckeditor.fields.RichTextField(verbose_name='متن اول')),
                ('titelll', models.CharField(blank=True, max_length=50, null=True, verbose_name='تیتر دوم')),
                ('texttt', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='متن دوم')),
            ],
        ),
        migrations.CreateModel(
            name='Addres',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phoone1', models.CharField(max_length=11, verbose_name='شماره تماس')),
                ('phoone2', models.CharField(blank=True, max_length=11, null=True, verbose_name='شماره تماس')),
                ('phoone3', models.CharField(blank=True, max_length=11, null=True, verbose_name='شماره تماس')),
                ('phoone4', models.CharField(blank=True, max_length=11, null=True, verbose_name='شماره تماس')),
                ('email1', models.EmailField(max_length=254, verbose_name='ایمیل')),
                ('email2', models.EmailField(blank=True, max_length=254, null=True, verbose_name='ایمیل')),
                ('email3', models.EmailField(blank=True, max_length=254, null=True, verbose_name='ایمیل')),
                ('adres', ckeditor.fields.RichTextField(verbose_name='نشانی')),
                ('op', models.IntegerField()),
                ('cl', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('zirname', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Contactus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500)),
                ('flname', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=11, unique=True, verbose_name='شماره موبایل')),
                ('creatat', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CostomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('firstname', models.CharField(max_length=20, verbose_name='نام')),
                ('lastname', models.CharField(max_length=100, verbose_name=' نام خانوادگی')),
                ('email', models.EmailField(max_length=254, verbose_name='ایمیل')),
                ('phonenumber', models.CharField(max_length=11, verbose_name='شماره تماس')),
                ('postalcode', models.CharField(max_length=10, verbose_name='کد پستی')),
                ('address', models.CharField(max_length=500, verbose_name='آدرس')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='نام محصول')),
                ('zirname', models.CharField(blank=True, default='', max_length=50, verbose_name='محصول نول دارد؟')),
                ('faz', models.CharField(max_length=50, verbose_name='مقدار فاز ')),
                ('flux', models.CharField(blank=True, default='', max_length=50, verbose_name='جریان')),
                ('pol', models.CharField(blank=True, default='', max_length=50, verbose_name='تعداد پل')),
                ('power', models.CharField(blank=True, default='', max_length=50, verbose_name='قدرت قطع')),
                ('isnew', models.BooleanField(default=False, verbose_name='آیا محصول جدید است؟')),
                ('creatat', models.DateTimeField(auto_now_add=True)),
                ('discount', models.BooleanField(default=False, verbose_name='آیا محصول تخفیف دارد؟')),
                ('discountpercentage', models.PositiveIntegerField(default=0, verbose_name='درصد تخفیف چقدر است؟')),
                ('discountutil', models.DateTimeField(blank=True, null=True, verbose_name='مدت زمان تخفیف چفدر است؟')),
                ('price', models.IntegerField(verbose_name='قیمت محصول چقدر است؟')),
                ('discountprice', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='قیمت محصول بعد از تخفیف')),
                ('codproduct', models.CharField(max_length=50, verbose_name='کد کالا')),
                ('brand', models.CharField(max_length=50, verbose_name='برند کالا')),
                ('image', models.ImageField(upload_to='photo', verbose_name='عکس محصول')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='photo', verbose_name='2عکس محصول')),
                ('sold_count', models.IntegerField(default=0, verbose_name='تعداد فروش')),
                ('imformation', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='توضیحات بیشتر')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='afapp.category', verbose_name='دسته بندی')),
            ],
        ),
    ]
